# -*- coding: utf-8 -*-
# Import required libraries
from plotly.graph_objs import *
import plotly
import  plotly.graph_objs as go
import dash
from dash.dependencies import Input, Output, State
import dash_core_components as dcc
import dash_html_components as html
import efieldtest2
import imgsource
import hfield
import geomag2
import pprint

# Setup the app
external_stylesheets = ['/assets/stylesheets.css']

app = dash.Dash(__name__, external_stylesheets=external_stylesheets)

app.config['suppress_callback_exceptions'] = True

app.css.config.serve_locally = True
app.scripts.config.serve_locally = True
server = app.server

plasma = [[0.0, '#0d0887'], [0.1111111111111111, '#46039f'], [0.2222222222222222, '#7201a8'], [0.3333333333333333, '#9c179e'], [0.4444444444444444, '#d8576b'], [0.5555555555555556, '#d8576b'], [0.6666666666666666, '#ed7953'], [0.7777777777777778, '#fb9f3a'], [0.8888888888888888, '#fdca26'], [1.0, '#f0f921']]


geo=[53.191428, 53.191646, 53.191666, 53.191549, 53.191589, 53.191910, 53.192, 53.192104, 53.192174, 53.192204, 53.192500, 53.192372, 53.192416, 53.192705, 53.192777, 53.192684, 53.192527, 53.192340, 53.192031, 53.191680, 53.191558, 53.191250, 53.190963, 53.190265, 53.189994, 53.189659, 53.189418, 53.189043, 53.189219, 53.189708, 53.189974, 53.189974, 53.189892, 53.189619, 53.189499, 53.189862, 53.189909, 53.190289, 53.190396, 53.190704, 53.190883, 53.191010, 53.191286, 53.191753]
geo2=[-6.094206, -6.094035, -6.093888, -6.093469, -6.093062, -6.091993, -6.091760, -6.091255, -6.090862, -6.090255, -6.090000, -6.089861, -6.089666, -6.089244, -6.088905, -6.088514, -6.087500, -6.087402, -6.087500, -6.087500, -6.087764, -6.087836, -6.087739, -6.087703, -6.087642, -6.087590, -6.087511, -6.087285, -6.086883, -6.086029, -6.085657, -6.085657, -6.085081, -6.085101, -6.084630, -6.084521, -6.083764, -6.084436, -6.084989, -6.085467, -6.085928, -6.086536, -6.087239, -6.087706]

app.layout = html.Div(
    [
        html.Div(
            [
                html.Div(
                    [
                        html.Div(
                            [
                                html.Img(
                                    src="/assets/crs-logo.jpg",
                                style={'height': 60, 'width': 'auto', 'padding': 25,  'float':'left'}),
                                html.H2("Geomagnetic Anomaly", style={'padding': 25,  'float':'left'}),
                                html.Img(src='/assets/headertop.png', style={'width': '100%', 'z-index': -1, 'margin': '-15px, -5px, -15px, -5px'}),
                            ], className='row'),
                html.Hr(),
                        dcc.Markdown(
                            """Geological Survey carried out of a known magnetic anomaly on the slopes of Bray Head, Co. Wicklow. Bray Head is an extinct faultline, with rocks of a high quartz content, dating back 570 million years. It is posited that the anomaly is caused by a static electric charge generated by pressure on the piezoelectric material of the rock. The dataset contains 48 data points (including the empty set) over a finite field of 1152 zones (48*24) and containing a total of 48 data entries for each point. The recurrence of the number 48 in the set is purely coincidental, but is interesting nonetheless. This research was funded and collected by [The Other Crowd Investigators](https://www.instagram.com/other_crowd_investigators/), in association with [Airbnb](https://www.airbnb.com/).""",
                            style={'margin': '10px 40px 10px 40px'}),
                    ],
                style={'color':'white'}),
                html.Hr(),
                html.Div([
                    html.Label('Date', style={'color': 'white', 'margin-left':40}),
                    dcc.Dropdown(
                        id='mydropdown',
                        options=[{'label': 'July 22nd 2019', 'value': 'july'}
                        ],
                        value='july', style={'width':'60%', 'margin-left':40}),
                        ],
                    
            ),
                html.Div([
                    html.Label('Data', style={'color': 'white', 'margin-left':40}),
                    dcc.Dropdown(
                        id='mydropdown2',
                        options=[{'label': 'Average', 'value': 'avg'},
                        {'label': 'Peak', 'value': 'vpp'},
                        ],
                        value='vpp',  style={'width':'60%', 'margin-left':40, 'margin-bottom':20}),
                    ]
                ),
                html.Div([
                    dcc.RadioItems(id='radio',
                        options=[
                            {'label': 'E-Field', 'value': 'e'},
                            {'label': 'H-Field', 'value': 'h'},
                        ],
                        value='h', labelStyle={'display': 'inline-block', 'color': 'white', 'margin-left':40}),
                ]),
                ],
                className="row",
        ),
        html.Div(
            [
                html.Div(id='container', className="three columns sidepanel"),
                dcc.Graph(id="graph", style={"margin": "0px 0px 0px 20px", "height": "90vh"},
                className="nine columns"),
            ],
            className="row",
        ),
        html.Div([
                  html.Br(),
                  html.Hr(),
                  html.Br(),
                  html.Footer(
                        html.Center(
                        dcc.Markdown('''[Cataphysical Research Society - 2019](https://cataphysical-research-society.herokuapp.com)''')),
                    ),
                  html.Br(),
                  html.Br(),
        ], className = "row"),
    ],
)

@app.callback(Output('graph', 'figure'),
              [Input('mydropdown2', 'value'),
              Input('radio', 'value')],
              state=[State('radio', 'value')])
def update_output(mydropdown2, radio, value):
    fet=[[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, 0, None, None, None, None, 1, None, 1, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 4, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 8, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 9, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 8, None, 2, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, 0, 0, 0, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, 0, None, 0, None, None, None, None, None, 0, 0, None, 0, 0, None, 2, 4, 4, None, None, None, None, None, None, None, 1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, None, None, None, 4, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 7, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]]
    
    met=[[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.32, None, None, None, None, None, None, None, None, 0.43, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.35, None, None, None, None, None, 0.42, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.32, None, None, None, None, 0.37, None, None, None, None, 0.45, None, 0.42, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.35, None, None, None, None, None, None, None, 0.39, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.37, None, None, None, None, 0.32, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.49, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.35, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.58, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.39, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.4, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.4, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.54, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.43, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.57, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.58, None, 0.48, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.37, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.57, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.39, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, 0.02, 0.09, 0.12, 0.14, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.4, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, 0.0, None, 0.11, None, None, None, None, None, 0.17, 0.24, None, 0.27, 0.27, None, 0.47, 0.49, 0.49, None, None, None, None, None, None, None, 0.44, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, 0.0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.52, None, None, None, 0.49, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.52, 0.54, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, 0.0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]]

    tes=hfield.tes_field()
    
    tep = (list(dict(data= [{'z': i, 'connectgaps': True, 'colorscale': plasma, 'showscale': True, 'opacity': 0.7, 'type':'contour'}]) for i in tes))
    
    test2=efieldtest2.efield()
    
    tep2 = (list(dict(data= [{'z': i, 'connectgaps': True, 'colorscale': plasma, 'showscale': True, 'opacity': 0.7, 'type':'contour'}]) for i in test2))
    
    temp=imgsource.img_import()
    
    if mydropdown2 == 'vpp' and radio == 'h':
        data = [go.Contour(
            z = met,
            connectgaps= True,
            colorscale = plasma,
            showscale=True,
            opacity= 0.7,
        ),
        ]
        layout = go.Layout(dict(title='Bray Head Geo-Magnetic Anomally (H-Field Maximum): Jul 22 2019',
                titlefont= {"size": 14},
                images= [
                    {
                      "x": 0, 
                      "y": 1, 
                      "layer": "below", 
                      "sizex": 1, 
                      "sizey": 1, 
                      "sizing": "stretch", 
                      "source": temp
                    }
                  ],
                  font={'color':'white'},
                  paper_bgcolor= '#0d0887',
                  plot_bgcolor= "white",
                  hovermode='closest',
                  showlegend=False)
                )
        figure = dict(data=data, layout = layout)
        return(figure)
    elif mydropdown2 == 'avg' and radio == 'h':
        data = [go.Contour(
                z= tes[0],
                connectgaps= True,
                colorscale= plasma,
                showscale= True,
                opacity= 0.7
            ),
        ]
        layout = go.Layout(dict(title='Bray Head Geo-Magnetic Anomally (H-Field): Jul 22 2019',
                    titlefont= {"size": 14},
                    images= [
                        {
                          "x": 0, 
                          "y": 1, 
                          "layer": "below", 
                          "sizex": 1, 
                          "sizey": 1, 
                          "sizing": "stretch", 
                          
                          "source": temp
                          },
                      ],
                      font={'color':'white'},
                      paper_bgcolor= '#0d0887',
                      plot_bgcolor= "white",
                      hovermode='closest',
                      showlegend=False,
                      updatemenus=[dict(type='buttons', showactive=False,
                                        y=1, x=-0.05, xanchor='right',
                                        yanchor='top', pad=dict(t=0, r=10),
                                        buttons=[dict(label='Play',
                                                      method='animate',
                                                      args=[None])])]))
                    
        frames = tep
        figure = dict(data=data, layout = layout, frames = frames)
        return(figure)
    elif mydropdown2 == 'vpp' and radio == 'e':
        data = [go.Contour(
            z = fet,
            connectgaps= True,
            colorscale = plasma,
            showscale=True,
            opacity= 0.7,
            ),
        ]
        layout = go.Layout(dict(title='Bray Head Geo-Magnetic Anomally (E-Field Maximum): Jul 22 2019',
                titlefont= {"size": 14},
                images= [
                    {
                      "x": 0, 
                      "y": 1, 
                      "layer": "below", 
                      "sizex": 1, 
                      "sizey": 1, 
                      "sizing": "stretch", 
                      "source": temp
                    }
                  ],
                  font={'color':'white'},
                  paper_bgcolor= '#0d0887',
                  plot_bgcolor= "white",
                  hovermode='closest',
                  showlegend=False),
        )
        figure = dict(data=data, layout = layout)
        return(figure)
    else:
        data = [go.Contour(
                z= test2[0],
                connectgaps= True,
                colorscale= plasma,
                showscale= True,
                opacity= 0.7
            ),
        ]
                        
        layout = go.Layout(dict(title='Bray Head Geo-Magnetic Anomally (E-Field): Jul 22 2019',
                    titlefont= {"size": 14},
                    images= [
                        {
                          "x": 0, 
                          "y": 1, 
                          "layer": "below", 
                          "sizex": 1, 
                          "sizey": 1, 
                          "sizing": "stretch", 
                          
                          "source": temp
                          },
                      ],
                      font={'color':'white'},
                      paper_bgcolor= '#0d0887',
                      plot_bgcolor= "white",
                      hovermode='closest',
                      showlegend=False,
                      updatemenus=[dict(type='buttons', showactive=False,
                                        y=1, x=-0.05, xanchor='right',
                                        yanchor='top', pad=dict(t=0, r=10),
                                        buttons=[dict(label='Play',
                                                      method='animate',
                                                      args=[None])])]))
        
        frames = tep2
        figure = dict(data=data, layout = layout, frames = frames)
        return(figure)

@app.callback(Output('container', 'children'),
                        [Input('mydropdown', 'value')])
def render_content(mydropdown):
    if mydropdown == 'july':
        target = geomag2.geodata()
        target2 = pprint.pformat(target)
        return html.Div([
            html.Br(),
            html.Label('Metadata', style={'font-family': 'inherit', 'size': 42, 'color': 'white', 'margin-bottom':20}),
            dcc.Textarea(id='textbox', value=target2, readOnly = True, rows=50, style={"height": "75vh", 'padding-top': 1, 'padding-bottom': 6, 'background-color': '#5af9fb', 'border-radius': 1, 'font-family': 'inherit', 'color': 'rgb(50, 50, 50)', 'margin-top': 0}
            )
        ], style={'width':'90%', 'float':'right'})

# Run the Dash app
if __name__ == "__main__":
    app.run_server(debug=True)